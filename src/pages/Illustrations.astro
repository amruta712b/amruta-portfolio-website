---
import FixedSidebarLayout from "../layouts/FixedSidebarLayout.astro";
import YellowBgFooter from "../layouts/YellowBgFooter.astro";
import "../styles/global.css";
import data from "../data/illustrations.json";
function getGridClass(index) {
  const classes = [
    "tall-large",
    "wide-medium",
    "wide-medium",
    "wide-large",
    "wide-medium",
    "wide-medium",
    "wide-large",
    "tall-medium",
    "tall-medium",
    "tall-medium",
    "tall-medium",
    "wide-medium",
    "wide-medium",
    "wide-small",
    "wide-small",
    "wide-small",
    "wide-small",
  ];
  return classes[index % classes.length] || "";
}
---

<FixedSidebarLayout title="Illustrations">
  <main class="illustration-page">
    <section class="illustration-white-background">
      <h1 class="title">Illustrations</h1>
      <div class="scroll-indicator">
        <img
          src="/images-optimized/envelopeclose.webp"
          alt="Scroll Down"
          class="envelope envelope-close"
        />
        <img
          src="/images-optimized/envelopeopen.webp"
          alt="Scroll Down Open"
          class="envelope envelope-open"
        />
      </div>
    </section>
    <div class="grid-wrapper">
      {
        data.map((item, index) => (
          <a
            href={`/illustrations/${item.URL}`}
            class={`grid-item ${getGridClass(index)}`}
          >
            <img
              src={`/images/works/illustrations/${item["file name"]}`}
              alt={item.title}
            />
          </a>
        ))
      }
    </div>
  </main>
</FixedSidebarLayout>
<YellowBgFooter />

<style>
  .illustration-white-background {
    justify-content: center;
    display: flex;
    flex-direction: column;
    min-height: 97vh;
    background-color: white;
    position: relative;
  }

  .title {
    text-align: center;
    font-size: 4rem;
    margin-top: 2rem;
    color: #fbd21a;
    font-family: "Lilita One", cursive;
  }
  .grid-wrapper {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
    background-color: #f8d227;
    padding: 2rem;
    margin: 2rem auto;
  }

  .grid-item {
    object-fit: cover;
    background: white;
    overflow: hidden;
    display: block;
  }

  .grid-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease;
  }

  .grid-item:hover img {
    transform: scale(1.05);
  }

  .tall-large {
    grid-column: span 2;
    grid-row: span 2;
  }

  .wide-medium {
    grid-column: span 2;
  }

  .wide-large {
    grid-column: span 4;
  }

  .wide-tall-medium {
    grid-column: span 2;
    grid-row: span 2;
  }
  .wide-small {
    grid-column: span 1;
    grid-row: span 1;
  }
  .scroll-indicator {
    bottom: 10px;
    left: 50%;
    bottom: 2rem;
    justify-content: center;
    position: absolute;
    transform: translateX(-50%);
    width: 150px; /* fixed small size */
    height: 150px;
  }
  .scroll-image {
    width: 150px; /* Set the width of your envelope */
    height: 150px;
  }

  .envelope {
    bottom: 4rem;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    object-fit: contain;
    opacity: 0;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
  }

  .envelope-close {
    animation-name: showClose;
  }

  .envelope-open {
    animation-name: showOpen;
  }

  @keyframes showClose {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 1;
    }
    51% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes showOpen {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 0;
    }
    51% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }
</style>
